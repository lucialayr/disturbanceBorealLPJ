strip.text = element_text(size = fontsize),
text = element_text(size = fontsize))
}
relative_uncertainty_map()[2] + add_common_layout(20)
library(tidyverse)
library(scico)
library(reshape2)
library(cowplot)
library(ggnewscale)
a = b
a = 1
gc()
rm(list = ls())
.rs.restartR()
1188/1.6
1188-742.5
106.20 + 77.95
225 + 280
30*25
4*4*100
2^10
1/2^10
2^-10
2^-10*4
(2^10)*5/4
2^10
2^10
2^10/4
(2^10/4*5)
53000/12
sqrt(1/(100*1.9))
sqrt(1/(100*1.9))*0.1
2^10
1/2^10
4/2^10
0.1*(1/1.5)**(1/1.5)
0.1*(1/2)**(1/2)
0.1*(1/1.5)**(1/1.5)
0.005/0.001
seq(10, 0, -0.001)
length(seq(10, 0, -0.001))
length(seq(1, 0, -0.001))
100*5
length(seq(1, 0, -0.001))/300
length(seq(10, 0, -0.001))/300
length(seq(1, 0, -0.001))/150
length(seq(10, 0, -0.001))/150
length(seq(5, 0, -0.001))/150
481,34 + 80 + 40
481.34 + 80 + 40
42*90
42*90- (360*4)
(42*90- (360*4))/4
1450 + 350 + 940
1450+940
2390-400
2000*12
31/12
3*28
install.packages("igraph")
3*5*8
3*5*8/24
4*28
4*8
3*4
3*4*12
3*4*8
3*4*8/24
library(dplyr)
S = c("ssp585", "picontrol")
D = c("0.04", "0.003333333", "0.1")
Y = c(2015, 2050, 2100, 2500)
2015 %in% Y
library(dplyr)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
head(df)
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, cumsum(column1 == 1)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
group = cumsum(column1 == 1),
column2 = ifelse(column1 == 1, 0, cumsum(column1 == 1) - lag(cumsum(column1 == 1), default = 0)),
column3 = cumsum(column1 == 1)
) %>%
select(-group)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
group = cumsum(column1 == 1),
column2 = ifelse(column1 == 1, 0, row_number() - first(row_number())[column1 == 1]),
column3 = cumsum(column1 == 1)
) %>%
select(-group)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0,  1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0))
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
?sequence
?rle
c = c(1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0)
rle(c)
rle(c)$lengths
sequence(rle(c)$lengths)
library(dplyr)
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
data <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
column3 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup() %>%
select(-last_year_with_1)
data
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
data <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
column3 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup()
data
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = max(column1[column2 == 1]),
last_year_with_1 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup()
print(result)
scico(30, palette = 'lapaz')
library(scico)
scico(30, palette = 'lapaz')
?scico::scico
scico(30, palette = 'lapaz', end = .8)
scico(3, palette = 'lapaz', end = .8)
scico(4, palette = 'lapaz', end = .8)
library(tidyverse)
library(scico)
library(gganimate)
require(gganimate)
install.packages("gganimate")
install.packages("ggraph")
library(ggraph)
time_step_data = data.frame(Time = c(1, 2, 3),
NodeID = c(1, 1, 2),
X = c(0.5, 0.5, 0.7),
Y = c(0.5, 0.5, 0.3),
Label = c("Node 1", "Node 1", "Node 2"),
Source = c(1, 2, 2),
Target = c(2, 3, 3)
)
static_network <- ggraph(your_network_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
static_network <- ggraph(time_step_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
library(gganimate)
library(ggraph)
time_step_data = data.frame(Time = c(1, 2, 3),
NodeID = c(1, 1, 2),
X = c(0.5, 0.5, 0.7),
Y = c(0.5, 0.5, 0.3),
Label = c("Node 1", "Node 1", "Node 2"),
Source = c(1, 2, 2),
Target = c(2, 3, 3)
)
static_network <- ggraph(time_step_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
install.packages("gifski")
install.packages("gifski")
5*4*3
60/28
install.packages("bookdown")
library(tidyverse)
setwd("~/02_Science/disturbanceBorealLPJ_github")
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(pft != "soil") %>%
group_by(d, s) %>%
mutate(relative = mean/sum(mean)) %>%
select(s, d, pft, relative)
View(df)
28 + 3,9
28 + 3.9
48 + 5.8
16.4 + 2.8
df = read_csv("data/final/final_vegetationB_cmass.csv")
View(df)
2.67/3.56
0.58/3.56
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
group_by(d, s) %>%
mutate(relative = mean/sum(mean)) %>%
select(s, d, pft, relative)
19 + 1.4
df = read_csv("data/final/final_albedoA.csv")
View(df)
df = read_csv("data/final/final_ETA.csv")
df = read_csv("data/final/final_EvapotranspirationA.csv")
df = read_csv("data/final/final_evapotransA.csv")
View(df)
?rank
?wilcox.test
df = read_csv("data/final/final_evapotransA.csv")
View(df)
df = read_csv("data/final/final_evapotransA.csv") %>%
group_by(year, d, s) %>%
summarize(aes_mean = mean(aes_mean)))
df = read_csv("data/final/final_evapotransA.csv") %>%
group_by(year, d, s) %>%
summarize(aes_mean = mean(aet_mean)))
df = read_csv("data/final/final_evapotransA.csv") %>%
group_by(year, d, s) %>%
summarize(aes_mean = mean(aet_mean))
ggplot() + geom_line(data = df, aes(x = Year, y = aes_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s, linetype = as.numeric(d))) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
df = read_csv("data/final/final_evapotransA.csv") %>%
group_by(year, d, s) %>%
summarize(aes_mean = mean(aet_mean),
d = as.factor(d))
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
df = read_csv("data/final/final_albedoA.csv") %>%
group_by(year, d, s) %>%
summarize(aes_mean = mean(aet_mean),
d = as.factor(d))
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
df = read_csv("data/final/final_albedoA.csv") %>%
group_by(year, d, s) %>%
summarize(albedo_mean = mean(albedo_mean),
d = as.factor(d))
ggplot() + geom_line(data = df, aes(x = year, y = aes_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
ggplot() + geom_line(data = df, aes(x = year, y = albedo_mean, group = interaction(d,s), color = s, linetype = d)) +
theme_minimal() +labs(x = "Year", y = "AET (mm)")
library(tidyverse)
library(purrr)
library(sf)
library(rnaturalearth)
library(cowplot)
library(terra)
loaded_packages <- (.packages(all.available = TRUE))
# Retrieve citation information for each package
for (pkg in loaded_packages) {
cat("Package:", pkg, "\n")
citation(pkg)
cat("\n")
}
citattion(terra)
citation(terra)
citattion("terra")
citation("terra")
citation("sf")
citattion("rnaturalearth")
citation("rnaturalearth")
citation("furrr")
citation("tidyverse")
citattion("scico")
citation("scico")
citation("furrr")
citation("ggplot2")
dfA = filter(df, d == "0.003", s = "picontrol")
dfA = filter(df, d == "0.003", s == "picontrol")
dfB = filter(df, d == "0.003", s == "ssp585")
vector = c(dfA, dfB)
label = c(rep("A",10),rep("B",10))
label = c(rep("A",length(dfA)),rep("B", length(dfB)))
willcox.test(dfA, dfB)
wilcox.test(dfA, dfB)
df = read_csv("data/final/final_albedoA.csv")
wilcox.test(dfA$albedo_mean, dfB$albedo_mean, paired = T)
test = wilcox.test(dfA$albedo_mean, dfB$albedo_mean, paired = T)
test$p.value
test = wilcox.test(dfA$albedo_mean, dfB$albedo_mean, paired = F)
test$p.value
library(tidyverse)
library(furrr)
source("code/utils_general.R")
df = read_csv("data/final/final_albedoC.csv")
head(df)
climate_scenario = "ssp585"
disturbance_regime = "0.04"
year = 2100
climate_scenario = "ssp585"
disturbance_regime = "0.04"
year = 2100
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4),
sd = ~round(sd(.x, na.rm = TRUE), digits = 4)),
.names = "reference_{.fn}_30years"))
season = c("jan", "feb", "dec")
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4),
sd = ~round(sd(.x, na.rm = TRUE), digits = 4)),
.names = "reference_{.fn}_30years"))
head(df_anomaly)
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4),
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4)),
.names = "reference_{.fn}_30years"))
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4)),
.names = "{.col}_{.fn}_30years"))
head(df_configuration)
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4)),
.names = "{.col}_{.fn}_30years")) %>%
full_join(df_anomaly)
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season)
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
full_join(df_anomaly)
head(df_anomaly)
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
rename(albedo = control_albedo)
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
rename(control_albedo = albedo)
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
full_join(df_anomaly)
head(df_configuration)
df_anomaly = read_csv(paste0("data/processed/", create_name_timeslice("picontrol", 0.003, "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat, year) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4)),
.names = "reference_{.fn}_30years"))
df_configuration = read_csv(paste0("data/processed/", create_name_timeslice(climate_scenario, round(as.numeric(disturbance_regime), 3), "albedo", year), "_processed.csv"),
show_col_types = FALSE) %>%
select(lon, lat, year, month, albedo) %>%
filter(month %in% season) %>%
group_by(lon, lat, year) %>%
summarize(across(albedo, list(mean = ~round(mean(.x, na.rm = TRUE), digits = 4)),
.names = "{.col}_{.fn}_30years")) %>%
full_join(df_anomaly)
head(df_configuration)
significance_test = df_configuration %>%
group_by(lon, lat) %>%
mutate(p_value = wilcoxon.test(albedo_mean_30years, reference_mean_30years, alternative = "two.sided")$p.value)
?wilcoxon.test
significance_test = df_configuration %>%
group_by(lon, lat) %>%
mutate(p_value = wilcox.test(albedo_mean_30years, reference_mean_30years, alternative = "two.sided")$p.value)
warnings()
head(significance_test)
hist(significance_test$p_value)
range(significance_test$p_value)
significance_test = significance_test %>%
mutate(significant = case_when(p_value < 0.05 ~ "1",
TRUE ~ "0")) %>%
significance_test = significance_test %>%
mutate(significant = case_when(p_value < 0.05 ~ "1",
TRUE ~ "0"))
significance_test = significance_test %>%
mutate(significant = case_when(p_value < 0.05 ~ "1",
TRUE ~ "0"))
table(significance_test$significant)
ggplot() + geom_tile(data = significance_test, aes(x = lon, y = lat, fill = significance))
ggplot() + geom_tile(data = significance_test, aes(x = lon, y = lat, fill = significant))
significance_test = significance_test %>%
mutate(significant = case_when(p_value < 0.01 ~ "1",
TRUE ~ "0"))
ggplot() + geom_tile(data = significance_test, aes(x = lon, y = lat, fill = significant))
df_configuration = significance_test
shp = df_configuration %>%
select(lon, lat, significant) %>%
terra::rast(crs = "EPSG:4326")
plot(shp)
shp = df_configuration %>%
select(lon, lat, significant) %>%
terra::rast(crs = "EPSG:4326") %>% # convert to  raster
as.polygons(dissolve = F, aggregate = T) %>% # convert to shapefile
st_as_sf() %>%
mutate(s = climate_scenario,
d = round(as.numeric(disturbance_regime), 3))
shp
plot(shp)

geom_histogram(data = dfhist,
aes(x = value, fill = variable), alpha = .25, bins = 200, color = "darkgrey"))
results = list(p0, p1, p2)
return(results)
}
add_common_layout = function(fontsize) {
theme_bw() %+replace%
theme(axis.title = element_text(size = fontsize),
legend.background = element_rect(fill='transparent', color = NA),
legend.box.background = element_rect(fill='transparent', color = NA),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA),
strip.background = element_rect(fill = "transparent", color = NA),
strip.text = element_text(size = fontsize),
text = element_text(size = fontsize))
}
relative_uncertainty_map()[2] + add_common_layout(20)
library(tidyverse)
library(scico)
library(reshape2)
library(cowplot)
library(ggnewscale)
a = b
a = 1
gc()
rm(list = ls())
.rs.restartR()
1188/1.6
1188-742.5
106.20 + 77.95
225 + 280
30*25
4*4*100
2^10
1/2^10
2^-10
2^-10*4
(2^10)*5/4
2^10
2^10
2^10/4
(2^10/4*5)
53000/12
sqrt(1/(100*1.9))
sqrt(1/(100*1.9))*0.1
2^10
1/2^10
4/2^10
0.1*(1/1.5)**(1/1.5)
0.1*(1/2)**(1/2)
0.1*(1/1.5)**(1/1.5)
0.005/0.001
seq(10, 0, -0.001)
length(seq(10, 0, -0.001))
length(seq(1, 0, -0.001))
100*5
length(seq(1, 0, -0.001))/300
length(seq(10, 0, -0.001))/300
length(seq(1, 0, -0.001))/150
length(seq(10, 0, -0.001))/150
length(seq(5, 0, -0.001))/150
481,34 + 80 + 40
481.34 + 80 + 40
42*90
42*90- (360*4)
(42*90- (360*4))/4
1450 + 350 + 940
1450+940
2390-400
2000*12
31/12
3*28
install.packages("igraph")
3*5*8
3*5*8/24
4*28
4*8
3*4
3*4*12
3*4*8
3*4*8/24
library(dplyr)
S = c("ssp585", "picontrol")
D = c("0.04", "0.003333333", "0.1")
Y = c(2015, 2050, 2100, 2500)
2015 %in% Y
library(dplyr)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
head(df)
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, cumsum(column1 == 1)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
group = cumsum(column1 == 1),
column2 = ifelse(column1 == 1, 0, cumsum(column1 == 1) - lag(cumsum(column1 == 1), default = 0)),
column3 = cumsum(column1 == 1)
) %>%
select(-group)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
group = cumsum(column1 == 1),
column2 = ifelse(column1 == 1, 0, row_number() - first(row_number())[column1 == 1]),
column3 = cumsum(column1 == 1)
) %>%
select(-group)
df <- data.frame(column1 = c(0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0,  1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0))
df <- data.frame(column1 = c(0, 1, 0, 0, 0, 0, 0, 0,  1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0))
df %>%
mutate(
column2 = ifelse(column1 == 1, 0, sequence(rle(column1)$lengths)),
column3 = cumsum(column1 == 1)
)
?sequence
?rle
c = c(1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0)
rle(c)
rle(c)$lengths
sequence(rle(c)$lengths)
library(dplyr)
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
data <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
column3 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup() %>%
select(-last_year_with_1)
data
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
row_id = row_number()  # Add a unique identifier within each group
) %>%
ungroup()
# Join the result back to the original data
final_result <- data %>%
left_join(result %>% select(column0, row_id, last_year_with_1, column2), by = c("column0", "row_id")) %>%
mutate(column3 = ifelse(column2 == 0, last_year_with_1, column1)) %>%
select(-last_year_with_1, -row_id)
data <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = ifelse(column2 == 1, column1, NA),
last_year_with_1 = zoo::na.locf(last_year_with_1),
column3 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup()
data
# Sample data
data <- data.frame(
column0 = c("A", "A", "A", "B", "B", "B", "B"),
column1 = c(2010, 2011, 2012, 2013, 2014, 2015, 2016),
column2 = c(1, 0, 0, 1, 0, 1, 0)
)
result <- data %>%
group_by(column0) %>%
mutate(
last_year_with_1 = max(column1[column2 == 1]),
last_year_with_1 = ifelse(column2 == 0, last_year_with_1, column1)
) %>%
ungroup()
print(result)
scico(30, palette = 'lapaz')
library(scico)
scico(30, palette = 'lapaz')
?scico::scico
scico(30, palette = 'lapaz', end = .8)
scico(3, palette = 'lapaz', end = .8)
scico(4, palette = 'lapaz', end = .8)
library(tidyverse)
library(scico)
library(gganimate)
require(gganimate)
install.packages("gganimate")
install.packages("ggraph")
library(ggraph)
time_step_data = data.frame(Time = c(1, 2, 3),
NodeID = c(1, 1, 2),
X = c(0.5, 0.5, 0.7),
Y = c(0.5, 0.5, 0.3),
Label = c("Node 1", "Node 1", "Node 2"),
Source = c(1, 2, 2),
Target = c(2, 3, 3)
)
static_network <- ggraph(your_network_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
static_network <- ggraph(time_step_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
library(gganimate)
library(ggraph)
time_step_data = data.frame(Time = c(1, 2, 3),
NodeID = c(1, 1, 2),
X = c(0.5, 0.5, 0.7),
Y = c(0.5, 0.5, 0.3),
Label = c("Node 1", "Node 1", "Node 2"),
Source = c(1, 2, 2),
Target = c(2, 3, 3)
)
static_network <- ggraph(time_step_data, layout = "layout_algorithm") +
geom_edge_link() +
geom_node_point() +
theme_void()
install.packages("gifski")
install.packages("gifski")
5*4*3
60/28
install.packages("bookdown")
gc()
install.packages("duckdb")
install.packages("aweSOM")
library(furrr)
test = function(x) {
df = data.frame("test" = 1, "value" = x)
return(df)
}
result = furrr::future_pmap_dfr(seq(1, 10), ~test(..1))
calculate_hypergeometric_pmf <- function(k, N_A2, K_B4, n_edges) {
dhyper(k, K_B4, N_A2 - K_B4, n_edges)
}
# Example usage
N_A2 <- 50  # Total number of nodes in A2
K_B4 <- 30  # Total number of nodes in B4
n_edges <- 20  # Total number of edges between A2 and B4
# Calculate the probability of observing exactly k edges
k <- 10  # Replace with your desired number of observed edges
probability <- calculate_hypergeometric_pmf(k, N_A2, K_B4, n_edges)
cat("Probability of observing", k, "edges:", probability, "\n")
?dhyper
df = data.frame(overlap = 50/seq(1,50))
df
df = expand.grid("number_points" = seq(1,50),
"number edges" = seq(1,50)) %>%
mutate(percentage = number_edges/50,
prob = dhyper(number_edges, number_points, 50 - number_points, number_points))
library(tidyverse)
df = expand.grid("number_points" = seq(1,50),
"number edges" = seq(1,50)) %>%
mutate(percentage = number_edges/50,
prob = dhyper(number_edges, number_points, 50 - number_points, number_points))
df = expand.grid("number_points" = seq(1,50),
"number_edges" = seq(1,50)) %>%
mutate(percentage = number_edges/50,
prob = dhyper(number_edges, number_points, 50 - number_points, number_points))
ggplot() + geom_line(data = df, aes(x = percentage, prob = d, color = number_edge, alpha = number_points))
head(df)
ggplot() + geom_line(data = df, aes(x = percentage, y = prob, color = number_edge, alpha = number_points))
ggplot() + geom_line(data = df, aes(x = percentage, y = prob, color = number_edges, alpha = number_points))
View(df)
df = expand.grid("number_edges" = seq(1,50)) %>%
mutate(percentage = number_edges/50,
prob = dhyper(number_edges, 50, 0, number_points))
df = expand.grid("number_edges" = seq(1,50)) %>%
mutate(percentage = number_edges/50,
prob = dhyper(number_edges, 50, 0, 50))
ggplot() + geom_line(data = df, aes(x = percentage, y = prob, color = number_edges, alpha = number_points))
ggplot() + geom_line(data = df, aes(x = percentage, y = prob, color = number_edges))
View(df)
33*160
library(mclust)
library(tidyverse)
setwd("~/02_Science/disturbanceBorealLPJ_github")
df = read_csv("data/final/final_vegetationB_cmass.csv")
head(df)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("control", "ssp585"))
View(df)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("control", "ssp585")) %>%
select(s, d, total_mean) %>%
unique()
View(df)
df = read_csv("data/final/final_vegetationB_cmass.csv")
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("control", "ssp585")) %>%
select(s, d, total_mean) %>%
unique()
View(df)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique()
View(df)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider()
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean)
names(df)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = )c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" ))
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01" ))
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = names, values_control = values) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01"))
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01"))
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = value*relative_reduction_control)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = value*relative_reduction_control) %>%
select(name, relative_reduction_ssp585, reduction_only_climate) %>%
unique()
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = value*relative_reduction_control)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = `ssp585_0.003`*relative_reduction_control)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = `ssp585_0.003`*relative_reduction_control)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(s, d), values_from = total_mean) %>%
pivot_longer(cols = c("picontrol_0.04" , "picontrol_0.1" , "picontrol_0.01" )) %>%
mutate(relative_reduction_control = value/`picontrol_0.003`) %>%
rename(names_control = name, values_control = value) %>%
pivot_longer(cols = c("ssp585_0.04" , "ssp585_0.1" , "ssp585_0.01")) %>%
mutate(relative_reduction_ssp585 = value/`ssp585_0.003`,
reduction_only_climate = relative_reduction_control*`ssp585_0.003`)
df = read_csv("data/final/final_vegetationB_cmass.csv") %>%
filter(s %in% c("picontrol", "ssp585")) %>%
select(s, d, total_mean) %>%
unique() %>%
pivot_wider(names_from = c(d), values_from = total_mean)
(1.08*3.27)/7.5
(3.56*7.54)/3.27
1.08/3.56
(1.08/3.56)*7.54
(0.5/3.56)*7.54
(2.68/3.56)*7.54
